@model GivingActually.Models.StoriesViewModel

@{
    ViewBag.Title = "AddCampaign";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    .form-horizontal {
        /*height: 650px;
        width: 100%;
        background-position: center;
        background-size: cover;*/
        height: 500px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
</style>
<h2>Add Campaign</h2>
<div class="container">
    @Html.AntiForgeryToken()
    @using (Html.BeginForm("AddCampaign", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-horizontal" id="FormUpload">
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserId)
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StoryTitle, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.StoryTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StoryTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StoryCategory, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.StoryCategory, EnumHelper.GetSelectList(typeof(GivingActually.Models.HelperModels.Helper.StoryCategory)), "Select", new { @class = "form-control", onChange = "OnTypeChanged(this)" })
                            @Html.ValidationMessageFor(model => model.StoryCategory, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Story, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Story, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Story, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CampaignTarget.Amount, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CampaignTarget.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CampaignTarget.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CampaignTarget.MoneyType, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.CampaignTarget.MoneyType, EnumHelper.GetSelectList(typeof(GivingActually.Models.HelperModels.Helper.MoneyType)), "Select", new { @class = "form-control", onChange = "OnMoneyTypeChanged(this)" })
                            @Html.ValidationMessageFor(model => model.CampaignTarget.MoneyType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CampaignTarget.TargetDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CampaignTarget.TargetDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CampaignTarget.TargetDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group classMedical" style="display:none">
                        @Html.LabelFor(model => model.CampaignTarget.HospitalName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CampaignTarget.HospitalName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CampaignTarget.HospitalName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group classMedical" style="display:none">
                        @Html.LabelFor(model => model.CampaignTarget.HospitalLocation, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CampaignTarget.HospitalLocation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CampaignTarget.HospitalLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group classMedical" style="display:none">
                        @Html.LabelFor(model => model.CampaignTarget.Reason, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CampaignTarget.Reason, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CampaignTarget.Reason, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">

                    <div class="col-md-offset-2 col-lg-6">
                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value=@(Model.Id == 0 ? "Create" : "Update") />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $("input[type='file']").on("change", function () {
            if (this.files[0].size > 2000000) {
                alert("Please upload file less than 2MB. Thanks!!");
                $(this).val('');
            }
        });

    });
    function OnTypeChanged(_this) {
        alert('in');
        var selectedValue = $(_this).val();

        if (selectedValue == 1) {
            show(document.querySelectorAll('.classMedical'));
        }
        else {
            hide(document.querySelectorAll('.classMedical'));
        }
    }

    function hide(elements) {
        elements = elements.length ? elements : [elements];
        for (var index = 0; index < elements.length; index++) {
            elements[index].style.display = 'none';
        }
    }

    function show(elements, specifiedDisplay) {
        elements = elements.length ? elements : [elements];
        for (var index = 0; index < elements.length; index++) {
            elements[index].style.display = specifiedDisplay || 'block';
        }
    }
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

